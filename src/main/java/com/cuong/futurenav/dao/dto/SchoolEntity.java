/*
 * Created on 14 Nov 2015 ( Time 21:15:59 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.cuong.futurenav.dao.dto;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "school"
 *
 * @author cuong nguyen
 *
 */

@Entity
@Table(name="school", catalog="dev" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="SchoolEntity.countAll", query="SELECT COUNT(x) FROM SchoolEntity x" )
} )
public class SchoolEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="name", nullable=false, length=200)
    private String     name         ;

    @Column(name="type", nullable=false, length=14)
    private String     type         ;

    @Column(name="relegious", length=14)
    private String     relegious    ;

    @Temporal(TemporalType.DATE)
    @Column(name="established", nullable=false)
    private Date       established  ;

    @Column(name="active", nullable=false)
    private Boolean    active       ;

    @Column(name="grade_from")
    private Byte       gradeFrom    ;

    @Column(name="grade_to")
    private Byte       gradeTo      ;

    @Column(name="website", length=100)
    private String     website      ;

    @Column(name="gender", length=14)
    private String     gender       ;

    @Column(name="crest_url", length=200)
    private String     crestUrl     ;

    @Column(name="slogan", length=200)
    private String     slogan       ;

    @Column(name="street", length=100)
    private String     street       ;

    @Column(name="longitude")
    private Double     longitude    ;

    @Column(name="latitude")
    private Double     latitude     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="au_created_dt", nullable=false, updatable=false, insertable=false)
    private Date       auCreatedDt  ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="au_updated_dt", nullable=false, updatable=false, insertable=false)
    private Date       auUpdatedDt  ;

    @Column(name="city", length=100)
    private String     city         ;

    @Column(name="state", length=100)
    private String     state        ;

    @Column(name="countrycode", length=2)
    private String     countrycode  ;

    @Column(name="zip", length=10)
    private String     zip          ;

    @OneToMany(mappedBy="school", targetEntity=SchoolDetailEntity.class, fetch = FetchType.EAGER)
    private List<SchoolDetailEntity> listOfSchoolDetail;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public SchoolEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : name ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }

    //--- DATABASE MAPPING : type ( SET ) 
    public void setType( String type ) {
        this.type = type;
    }
    public String getType() {
        return this.type;
    }

    //--- DATABASE MAPPING : relegious ( SET ) 
    public void setRelegious( String relegious ) {
        this.relegious = relegious;
    }
    public String getRelegious() {
        return this.relegious;
    }

    //--- DATABASE MAPPING : established ( DATE ) 
    public void setEstablished( Date established ) {
        this.established = established;
    }
    public Date getEstablished() {
        return this.established;
    }

    //--- DATABASE MAPPING : active ( BIT ) 
    public void setActive( Boolean active ) {
        this.active = active;
    }
    public Boolean getActive() {
        return this.active;
    }

    //--- DATABASE MAPPING : grade_from ( TINYINT ) 
    public void setGradeFrom( Byte gradeFrom ) {
        this.gradeFrom = gradeFrom;
    }
    public Byte getGradeFrom() {
        return this.gradeFrom;
    }

    //--- DATABASE MAPPING : grade_to ( TINYINT ) 
    public void setGradeTo( Byte gradeTo ) {
        this.gradeTo = gradeTo;
    }
    public Byte getGradeTo() {
        return this.gradeTo;
    }

    //--- DATABASE MAPPING : website ( VARCHAR ) 
    public void setWebsite( String website ) {
        this.website = website;
    }
    public String getWebsite() {
        return this.website;
    }

    //--- DATABASE MAPPING : gender ( SET ) 
    public void setGender( String gender ) {
        this.gender = gender;
    }
    public String getGender() {
        return this.gender;
    }

    //--- DATABASE MAPPING : crest_url ( VARCHAR ) 
    public void setCrestUrl( String crestUrl ) {
        this.crestUrl = crestUrl;
    }
    public String getCrestUrl() {
        return this.crestUrl;
    }

    //--- DATABASE MAPPING : slogan ( VARCHAR ) 
    public void setSlogan( String slogan ) {
        this.slogan = slogan;
    }
    public String getSlogan() {
        return this.slogan;
    }

    //--- DATABASE MAPPING : street ( VARCHAR ) 
    public void setStreet( String street ) {
        this.street = street;
    }
    public String getStreet() {
        return this.street;
    }

    //--- DATABASE MAPPING : longitude ( DOUBLE ) 
    public void setLongitude( Double longitude ) {
        this.longitude = longitude;
    }
    public Double getLongitude() {
        return this.longitude;
    }

    //--- DATABASE MAPPING : latitude ( DOUBLE ) 
    public void setLatitude( Double latitude ) {
        this.latitude = latitude;
    }
    public Double getLatitude() {
        return this.latitude;
    }

    //--- DATABASE MAPPING : au_created_dt ( DATETIME ) 
    public void setAuCreatedDt( Date auCreatedDt ) {
        this.auCreatedDt = auCreatedDt;
    }
    public Date getAuCreatedDt() {
        return this.auCreatedDt;
    }

    //--- DATABASE MAPPING : au_updated_dt ( DATETIME ) 
    public void setAuUpdatedDt( Date auUpdatedDt ) {
        this.auUpdatedDt = auUpdatedDt;
    }
    public Date getAuUpdatedDt() {
        return this.auUpdatedDt;
    }

    //--- DATABASE MAPPING : city ( VARCHAR ) 
    public void setCity( String city ) {
        this.city = city;
    }
    public String getCity() {
        return this.city;
    }

    //--- DATABASE MAPPING : state ( VARCHAR ) 
    public void setState( String state ) {
        this.state = state;
    }
    public String getState() {
        return this.state;
    }

    //--- DATABASE MAPPING : countrycode ( VARCHAR ) 
    public void setCountrycode( String countrycode ) {
        this.countrycode = countrycode;
    }
    public String getCountrycode() {
        return this.countrycode;
    }

    //--- DATABASE MAPPING : zip ( VARCHAR ) 
    public void setZip( String zip ) {
        this.zip = zip;
    }
    public String getZip() {
        return this.zip;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    public void setListOfSchoolDetail( List<SchoolDetailEntity> listOfSchoolDetail ) {
        this.listOfSchoolDetail = listOfSchoolDetail;
    }
    public List<SchoolDetailEntity> getListOfSchoolDetail() {
        return this.listOfSchoolDetail;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(name);
        sb.append("|");
        sb.append(type);
        sb.append("|");
        sb.append(relegious);
        sb.append("|");
        sb.append(established);
        sb.append("|");
        sb.append(active);
        sb.append("|");
        sb.append(gradeFrom);
        sb.append("|");
        sb.append(gradeTo);
        sb.append("|");
        sb.append(website);
        sb.append("|");
        sb.append(gender);
        sb.append("|");
        sb.append(crestUrl);
        sb.append("|");
        sb.append(slogan);
        sb.append("|");
        sb.append(street);
        sb.append("|");
        sb.append(longitude);
        sb.append("|");
        sb.append(latitude);
        sb.append("|");
        sb.append(auCreatedDt);
        sb.append("|");
        sb.append(auUpdatedDt);
        sb.append("|");
        sb.append(city);
        sb.append("|");
        sb.append(state);
        sb.append("|");
        sb.append(countrycode);
        sb.append("|");
        sb.append(zip);
        return sb.toString(); 
    } 

}
