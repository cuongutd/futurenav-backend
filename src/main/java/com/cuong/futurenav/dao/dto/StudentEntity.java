/*
 * Created on 14 Nov 2015 ( Time 15:24:06 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.cuong.futurenav.dao.dto;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "student"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="student", catalog="dev" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="StudentEntity.countAll", query="SELECT COUNT(x) FROM StudentEntity x" )
} )
public class StudentEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="name_first", nullable=false, length=40)
    private String     nameFirst    ;

    @Column(name="name_last", nullable=false, length=40)
    private String     nameLast     ;

    @Column(name="name_middle", length=40)
    private String     nameMiddle   ;

    @Column(name="email", nullable=false, length=100)
    private String     email        ;

    @Column(name="city", length=100)
    private String     city         ;

    @Column(name="country", length=100)
    private String     country      ;

    @Temporal(TemporalType.DATE)
    @Column(name="born_year")
    private Date       bornYear     ;

    @Temporal(TemporalType.DATE)
    @Column(name="birth_date")
    private Date       birthDate    ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="au_created_dt", nullable=false)
    private Date       auCreatedDt  ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="au_updated_dt", nullable=false)
    private Date       auUpdatedDt  ;

    @Column(name="au_created_by")
    private Integer    auCreatedBy  ;

    @Column(name="au_updated_by")
    private Integer    auUpdatedBy  ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="student", targetEntity=StudentLoginEntity.class)
    private List<StudentLoginEntity> listOfStudentLogin;

    @OneToMany(mappedBy="student", targetEntity=FavSchoolEntity.class)
    private List<FavSchoolEntity> listOfFavSchool;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public StudentEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : name_first ( VARCHAR ) 
    public void setNameFirst( String nameFirst ) {
        this.nameFirst = nameFirst;
    }
    public String getNameFirst() {
        return this.nameFirst;
    }

    //--- DATABASE MAPPING : name_last ( VARCHAR ) 
    public void setNameLast( String nameLast ) {
        this.nameLast = nameLast;
    }
    public String getNameLast() {
        return this.nameLast;
    }

    //--- DATABASE MAPPING : name_middle ( VARCHAR ) 
    public void setNameMiddle( String nameMiddle ) {
        this.nameMiddle = nameMiddle;
    }
    public String getNameMiddle() {
        return this.nameMiddle;
    }

    //--- DATABASE MAPPING : email ( VARCHAR ) 
    public void setEmail( String email ) {
        this.email = email;
    }
    public String getEmail() {
        return this.email;
    }

    //--- DATABASE MAPPING : city ( VARCHAR ) 
    public void setCity( String city ) {
        this.city = city;
    }
    public String getCity() {
        return this.city;
    }

    //--- DATABASE MAPPING : country ( VARCHAR ) 
    public void setCountry( String country ) {
        this.country = country;
    }
    public String getCountry() {
        return this.country;
    }

    //--- DATABASE MAPPING : born_year ( YEAR ) 
    public void setBornYear( Date bornYear ) {
        this.bornYear = bornYear;
    }
    public Date getBornYear() {
        return this.bornYear;
    }

    //--- DATABASE MAPPING : birth_date ( DATE ) 
    public void setBirthDate( Date birthDate ) {
        this.birthDate = birthDate;
    }
    public Date getBirthDate() {
        return this.birthDate;
    }

    //--- DATABASE MAPPING : au_created_dt ( DATETIME ) 
    public void setAuCreatedDt( Date auCreatedDt ) {
        this.auCreatedDt = auCreatedDt;
    }
    public Date getAuCreatedDt() {
        return this.auCreatedDt;
    }

    //--- DATABASE MAPPING : au_updated_dt ( DATETIME ) 
    public void setAuUpdatedDt( Date auUpdatedDt ) {
        this.auUpdatedDt = auUpdatedDt;
    }
    public Date getAuUpdatedDt() {
        return this.auUpdatedDt;
    }

    //--- DATABASE MAPPING : au_created_by ( INT ) 
    public void setAuCreatedBy( Integer auCreatedBy ) {
        this.auCreatedBy = auCreatedBy;
    }
    public Integer getAuCreatedBy() {
        return this.auCreatedBy;
    }

    //--- DATABASE MAPPING : au_updated_by ( INT ) 
    public void setAuUpdatedBy( Integer auUpdatedBy ) {
        this.auUpdatedBy = auUpdatedBy;
    }
    public Integer getAuUpdatedBy() {
        return this.auUpdatedBy;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfStudentLogin( List<StudentLoginEntity> listOfStudentLogin ) {
        this.listOfStudentLogin = listOfStudentLogin;
    }
    public List<StudentLoginEntity> getListOfStudentLogin() {
        return this.listOfStudentLogin;
    }

    public void setListOfFavSchool( List<FavSchoolEntity> listOfFavSchool ) {
        this.listOfFavSchool = listOfFavSchool;
    }
    public List<FavSchoolEntity> getListOfFavSchool() {
        return this.listOfFavSchool;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(nameFirst);
        sb.append("|");
        sb.append(nameLast);
        sb.append("|");
        sb.append(nameMiddle);
        sb.append("|");
        sb.append(email);
        sb.append("|");
        sb.append(city);
        sb.append("|");
        sb.append(country);
        sb.append("|");
        sb.append(bornYear);
        sb.append("|");
        sb.append(birthDate);
        sb.append("|");
        sb.append(auCreatedDt);
        sb.append("|");
        sb.append(auUpdatedDt);
        sb.append("|");
        sb.append(auCreatedBy);
        sb.append("|");
        sb.append(auUpdatedBy);
        return sb.toString(); 
    } 

}
